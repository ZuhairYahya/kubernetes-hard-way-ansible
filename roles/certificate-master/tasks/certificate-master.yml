---
- name: copy all template
  template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
  with_items:
    - { src: 'admin-csr.json.j2', dest: '{{ kubernetes.certificate.directory }}/admin-csr.json' }
    - { src: 'kube-controller-manager-csr.json.j2', dest: '{{ kubernetes.certificate.directory }}/kube-controller-manager-csr.json' }
    - { src: 'kube-scheduler-csr.json.j2', dest: '{{ kubernetes.certificate.directory }}/kube-scheduler-csr.json' }
    - { src: 'service-account-csr.json.j2', dest: '{{ kubernetes.certificate.directory }}/service-account-csr.json' }
    - { src: 'metrics-server-csr.json.j2', dest: '{{ kubernetes.certificate.directory }}/metrics-server-csr.json' }

# used in admin kubeconfig
- name: generate admin certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    admin-csr.json | cfssljson -bare admin

# used in kube-controller-manager kubeconfig
- name: generate controller-manager certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager

# used in kube-scheduler kubeconfig
- name: generate scheduler certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    kube-scheduler-csr.json | cfssljson -bare kube-scheduler

# used as flags in kube-apiserver and kube-controller-manager
- name: generate service-account certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    service-account-csr.json | cfssljson -bare service-account

# used as flags in kube-apiserver
- name: generate metrics-server certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    metrics-server-csr.json | cfssljson -bare aggregator-proxy-client

- name: copy cert into master node
  vars:
    master_ip: "{{ groups['master'] | join(' ') }}"
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    for instance in {{ master_ip }}; do
      # copy root CA and key
      scp ca.pem {{ user }}@${instance}:~/
      scp ca-key.pem {{ user }}@${instance}:~/

      # copy API server certificate
      scp kubernetes-key.pem {{ user }}@${instance}:~/
      scp kubernetes.pem {{ user }}@${instance}:~/

      # copy service account certificate
      scp service-account-key.pem {{ user }}@${instance}:~/
      scp service-account.pem {{ user }}@${instance}:~/

      # copy metrics-server certificate
      scp aggregator-proxy-client.pem {{ user }}@${instance}:~/
      scp aggregator-proxy-client-key.pem {{ user }}@${instance}:~/
    done
