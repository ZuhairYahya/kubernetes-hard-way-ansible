---
- name: generate kubeconfig for client
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    kubectl config set-cluster {{ kubernetes.clusterName }} \
        --certificate-authority=ca.pem \
        --embed-certs=true \
        --server=https://{{ infrastructure.keepalived.virtualIP }}:{{ infrastructure.keepalived.virtualIPPort }} \
        --kubeconfig=client.kubeconfig

    kubectl config set-credentials admin \
        --client-certificate=admin.pem \
        --client-key=admin-key.pem \
        --embed-certs=true \
        --kubeconfig=client.kubeconfig

    kubectl config set-context {{ kubernetes.clusterName }} \
        --cluster={{ kubernetes.clusterName }} \
        --user=admin \
        --kubeconfig=client.kubeconfig

    kubectl config use-context {{ kubernetes.clusterName }} --kubeconfig=client.kubeconfig
  when: kubernetes.certificate.createClientKubeconfig

- name: create .kube directory
  file:
    path: /home/{{ user }}/.kube/
    state: directory
  when: kubernetes.certificate.createClientKubeconfig

- name: Copy client.kubeconfig to .kube directory
  copy: 
    src: "{{ kubernetes.certificate.directory }}/client.kubeconfig"
    dest: "/home/{{ user }}/.kube/config"
    remote_src: yes
  when: kubernetes.certificate.createClientKubeconfig
  
- name: generate kubeconfig for client oidc
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    kubectl config set-cluster {{ kubernetes.clusterName }} \
        --certificate-authority=ca.pem \
        --embed-certs=true \
        --server=https://{{ infrastructure.keepalived.virtualIP }}:{{ infrastructure.keepalived.virtualIPPort }} \
        --kubeconfig=client-oidc.kubeconfig
  when: kubernetes.addonsComponents.oidc.enabled
