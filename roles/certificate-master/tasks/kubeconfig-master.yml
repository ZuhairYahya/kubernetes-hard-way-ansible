---
# used as kubeconfig for admin kubectl
- name: generate kubeconfig for admin
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    kubectl config set-cluster {{ kubernetes.clusterName }} \
        --certificate-authority=ca.pem \
        --embed-certs=true \
        --server=https://127.0.0.1:6443 \
        --kubeconfig=admin.kubeconfig

    kubectl config set-credentials admin \
        --client-certificate=admin.pem \
        --client-key=admin-key.pem \
        --embed-certs=true \
        --kubeconfig=admin.kubeconfig

    kubectl config set-context default \
        --cluster={{ kubernetes.clusterName }} \
        --user=admin \
        --kubeconfig=admin.kubeconfig

    kubectl config use-context default --kubeconfig=admin.kubeconfig

# used as flags in kube-controller-manager
- name: generate kubeconfig for controller-manager
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    kubectl config set-cluster {{ kubernetes.clusterName }} \
        --certificate-authority=ca.pem \
        --embed-certs=true \
        --server=https://127.0.0.1:6443 \
        --kubeconfig=kube-controller-manager.kubeconfig

    kubectl config set-credentials system:kube-controller-manager \
        --client-certificate=kube-controller-manager.pem \
        --client-key=kube-controller-manager-key.pem \
        --embed-certs=true \
        --kubeconfig=kube-controller-manager.kubeconfig

    kubectl config set-context default \
        --cluster={{ kubernetes.clusterName }} \
        --user=system:kube-controller-manager \
        --kubeconfig=kube-controller-manager.kubeconfig

    kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig

# used as flags in kube-scheduler
- name: generate kubeconfig for scheduler
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    kubectl config set-cluster {{ kubernetes.clusterName }} \
        --certificate-authority=ca.pem \
        --embed-certs=true \
        --server=https://127.0.0.1:6443 \
        --kubeconfig=kube-scheduler.kubeconfig

    kubectl config set-credentials system:kube-scheduler \
        --client-certificate=kube-scheduler.pem \
        --client-key=kube-scheduler-key.pem \
        --embed-certs=true \
        --kubeconfig=kube-scheduler.kubeconfig

    kubectl config set-context {{ kubernetes.clusterName }} \
        --cluster={{ kubernetes.clusterName }} \
        --user=system:kube-scheduler \
        --kubeconfig=kube-scheduler.kubeconfig

    kubectl config use-context {{ kubernetes.clusterName }} --kubeconfig=kube-scheduler.kubeconfig

- name: copy kubeconfig into master node
  vars:
    master_ip: "{{ groups['master'] | join(' ') }}"
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    for instance in {{ master_ip }}; do
        scp admin.kubeconfig {{ user }}@${instance}:~/
        scp kube-controller-manager.kubeconfig {{ user }}@${instance}:~/
        scp kube-scheduler.kubeconfig {{ user }}@${instance}:~/
    done
