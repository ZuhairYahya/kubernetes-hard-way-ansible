---
- name: generate admin certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    admin-csr.json | cfssljson -bare admin

- name: generate worker certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -hostname={{ item }} \
    -profile=kubernetes \
    {{ item }}-csr.json | cfssljson -bare {{ item }}
  with_items: "{{ groups['worker'] }}"

- name: generate master certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -hostname={{ item }} \
    -profile=kubernetes \
    {{ item }}-csr.json | cfssljson -bare {{ item }}
  with_items: "{{ groups['master'] }}"

- name: generate controller-manager certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager

- name: generate kube-proxy certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    kube-proxy-csr.json | cfssljson -bare kube-proxy

- name: generate scheduler certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    kube-scheduler-csr.json | cfssljson -bare kube-scheduler
    
- name: generate service-account certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    service-account-csr.json | cfssljson -bare service-account

- name: generate metrics-server certificate
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
    metrics-server-csr.json | cfssljson -bare aggregator-proxy-client

- name: generate api-server certificate
  vars:
    etcd_ip: "{{ groups['etcd'] | join(',') }}"
    master_ip: "{{ groups['master'] | join(',') }}"
  args:
    chdir: ~/certificate-template
  shell: |
    cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -hostname=10.32.0.1,{{ etcd_ip }},{{ master_ip }},{{ virtual_ip }},127.0.0.1,kubernetes,kubernetes.default \
    -profile=kubernetes \
    kubernetes-csr.json | cfssljson -bare kubernetes

- name: copy cert into worker node
  vars:
    worker_ip: "{{ groups['worker'] | join(' ') }}"
  args:
    chdir: ~/certificate-template
  shell: |
    for instance in {{ worker_ip }}; do
      scp ${instance}-key.pem {{ user }}@${instance}:/var/lib/kubelet/${instance}-key.pem
      scp ${instance}.pem {{ user }}@${instance}:/var/lib/kubelet/${instance}.pem
    done

- name: copy cert into etcd node
  vars:
    etcd_ip: "{{ groups['etcd'] | join(' ') }}"
  args:
    chdir: ~/certificate-template
  shell: |
    for instance in {{ etcd_ip }}; do
      scp kubernetes-key.pem {{ user }}@${instance}:/etc/etcd/kubernetes-key.pem
      scp kubernetes.pem {{ user }}@${instance}:/etc/etcd/kubernetes.pem
    done

- name: copy cert into master node
  vars:
    master_ip: "{{ groups['master'] | join(' ') }}"
  args:
    chdir: ~/certificate-template
  shell: |
    for instance in {{ master_ip }}; do
      scp kubernetes-key.pem {{ user }}@${instance}:/var/lib/kubernetes/kubernetes-key.pem
      scp kubernetes.pem {{ user }}@${instance}:/var/lib/kubernetes/kubernetes.pem
      scp service-account-key.pem {{ user }}@${instance}:/var/lib/kubernetes/service-account-key.pem
      scp service-account.pem {{ user }}@${instance}:/var/lib/kubernetes/service-account.pem
      scp aggregator-proxy-client.pem {{ user }}@${instance}:/var/lib/kubernetes/aggregator-proxy-client.pem
      scp aggregator-proxy-client-key.pem {{ user }}@${instance}:/var/lib/kubernetes/aggregator-proxy-client-key.pem
      scp ${instance}-key.pem {{ user }}@${instance}:/var/lib/kubelet/${instance}-key.pem
      scp ${instance}.pem {{ user }}@${instance}:/var/lib/kubelet/${instance}.pem
    done
