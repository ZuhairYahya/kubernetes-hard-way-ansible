- name: create kubernetes directory
  file:
    path: /etc/kubernetes/config/
    state: directory

- name: create kubernetes directory
  file:
    path: /var/lib/kubernetes/
    state: directory

- name: create kubectl directory
  file:
    path: /root/.kube/
    state: directory

- name: Download and extract Kubernetes server
  unarchive:
    src: https://dl.k8s.io/{{ kubernetes.version }}/kubernetes-server-linux-amd64.tar.gz
    dest: /opt/
    remote_src: yes

- name: install kubernetes service
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: a+x
    remote_src: yes
  with_items:
  - { src: '/opt/kubernetes/server/bin/kube-apiserver', dest: '/usr/local/bin/kube-apiserver' }
  - { src: '/opt/kubernetes/server/bin/kube-controller-manager', dest: '/usr/local/bin/kube-controller-manager' }
  - { src: '/opt/kubernetes/server/bin/kube-scheduler', dest: '/usr/local/bin/kube-scheduler' }
  - { src: '/opt/kubernetes/server/bin/kubectl', dest: '/usr/local/bin/kubectl' }

- name: Copy cert
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
    mode: 400
  with_items:
    - { src: '/home/{{ user }}/ca.pem', dest: '/var/lib/kubernetes/ca.pem' }
    - { src: '/home/{{ user }}/ca-key.pem', dest: '/var/lib/kubernetes/ca-key.pem' }
    - { src: '/home/{{ user }}/kubernetes-key.pem', dest: '/var/lib/kubernetes/kubernetes-key.pem' }
    - { src: '/home/{{ user }}/kubernetes.pem', dest: '/var/lib/kubernetes/kubernetes.pem' }
    - { src: '/home/{{ user }}/service-account-key.pem', dest: '/var/lib/kubernetes/service-account-key.pem' }
    - { src: '/home/{{ user }}/service-account.pem', dest: '/var/lib/kubernetes/service-account.pem' }
    - { src: '/home/{{ user }}/aggregator-proxy-client.pem', dest: '/var/lib/kubernetes/aggregator-proxy-client.pem' }
    - { src: '/home/{{ user }}/aggregator-proxy-client-key.pem', dest: '/var/lib/kubernetes/aggregator-proxy-client-key.pem' }
    - { src: '/home/{{ user }}/encryption-config.yml', dest: '/var/lib/kubernetes/encryption-config.yml' }
    - { src: '/home/{{ user }}/kube-controller-manager.kubeconfig', dest: '/var/lib/kubernetes/kube-controller-manager.kubeconfig' }
    - { src: '/home/{{ user }}/kube-scheduler.kubeconfig', dest: '/var/lib/kubernetes/kube-scheduler.kubeconfig' }
    - { src: '/home/{{ user }}/admin.kubeconfig', dest: '/root/.kube/config' }

- name: create kubernetes service files
  template:
    src: "kube-scheduler.yml.j2"
    dest: "/etc/kubernetes/config/kube-scheduler.yml"

- name: create kubernetes service files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 644
  with_items:
    - { src: 'kube-controller-manager.service.j2', dest: '/etc/systemd/system/kube-controller-manager.service' }
    - { src: 'kube-apiserver.service.j2', dest: '/etc/systemd/system/kube-apiserver.service' }
    - { src: 'kube-scheduler.service.j2', dest: '/etc/systemd/system/kube-scheduler.service' }

- name: restart kube-apiserver
  systemd:
    name: kube-apiserver
    state: restarted
    daemon_reload: yes
    enabled: yes

- name: restart kube-controller-manager
  systemd:
    name: kube-controller-manager
    state: restarted
    daemon_reload: yes
    enabled: yes

- name: restart kube-scheduler
  systemd:
    name: kube-scheduler
    state: restarted
    daemon_reload: yes
    enabled: yes




