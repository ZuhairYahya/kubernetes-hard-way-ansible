---
- name: generate kubeconfig for kubelet worker
  vars:
    worker_ip: "{{ groups['worker'] | join(' ') }}"
  args:
    chdir: {{ kubernetes.certificate.directory }}
  shell: |
    for instance in {{ worker_ip }}; do
      kubectl config set-cluster {{ kubernetes.clusterName }} \
        --certificate-authority=ca.pem \
        --embed-certs=true \
        --server=https://{{ infrastructure.keepalived.virtualIP }}:{{ infrastructure.keepalived.virtualIPPort }}\
        --kubeconfig=${instance}.kubeconfig

      kubectl config set-credentials system:node:${instance} \
        --client-certificate=${instance}.pem \
        --client-key=${instance}-key.pem \
        --embed-certs=true \
        --kubeconfig=${instance}.kubeconfig

      kubectl config set-context default \
        --cluster={{ kubernetes.clusterName }} \
        --user=system:node:${instance} \
        --kubeconfig=${instance}.kubeconfig

      kubectl config use-context default --kubeconfig=${instance}.kubeconfig
    done

- name: copy kubeconfig into worker node
  vars:
    worker_ip: "{{ groups['worker'] | join(' ') }}"
  args:
    chdir: {{ kubernetes.certificate.directory }}
  shell: |
    for instance in {{ worker_ip }}; do
        scp ${instance}.kubeconfig {{ user }}@${instance}:~/
        scp kube-proxy.kubeconfig {{ user }}@${instance}:~/
    done
